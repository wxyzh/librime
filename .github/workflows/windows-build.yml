name: Windows build
on:
  workflow_call:
    inputs:
      repository:
        default: ${{ github.repository }}
        required: false
        type: string
      branch:
        default: master
        required: false
        type: string
      rime_plugins:
        required: false
        type: string

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2022, windows-2019]
        compiler: [msvc, clang]
        arch: [x64]
        include:
          - {os: windows-2022, windows-2019}
          - { compiler: msvc, cc: cl, cxx: cl }
          - { compiler: clang, cc: clang, cxx: clang++ }
          - { compiler: msvc, arch: x86, cross_arch: x64_x86 }
          - { compiler: msvc, arch: arm64, cross_arch: amd64_arm64 }
    env:
      boost_version: 1.84.0
      BOOST_ROOT: ${{ github.workspace }}\deps\boost-1.84.0
      RIME_PLUGINS: ${{ inputs.rime_plugins }}

    steps:
      - name: Checkout last commit
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository }}
          ref: ${{inputs.branch}}
          submodules: recursive

      - name: Create env.bat
        run: |
          $envfile = ".\env.bat"
          $envcontent = @"
            set RIME_ROOT=%CD%
            set CXX=${{ matrix.cxx }}
            set CC=${{ matrix.cc }}
            set CMAKE_GENERATOR=Ninja
          "@
          Set-Content -Path $envfile -Value $envcontent
          cat $envfile
          
      - name: Configure MSVC
        if: ${{ matrix.compiler == 'msvc' }}
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.cross_arch || matrix.arch }}

      - name: Configure Ninja
        run: pip install ninja

      - name: Configure clang
        if: ${{ matrix.compiler == 'clang' }}
        run: choco upgrade -y llvm

      - name: Configure build environment
        run: |
          $git_ref_name = git describe --always
          echo "git_ref_name=$git_ref_name" >> $env:GITHUB_ENV
          git submodule > submodule-status

      - name: Install boost
        if: ${{ matrix.arch != 'arm64' }}
        run: .\install-boost.bat
        
      - name: Install boost
        if: ${{ matrix.arch == 'arm64' }}
        shell: cmd
        run: |
          setlocal
          if not defined RIME_ROOT set RIME_ROOT=%CD%
          if not defined boost_version set boost_version=1.84.0
          if not defined BOOST_ROOT set BOOST_ROOT=%RIME_ROOT%\deps\boost-%boost_version%
          if exist "%BOOST_ROOT%\libs" goto boost_found
          for %%I in ("%BOOST_ROOT%\.") do set src_dir=%%~dpI
          rem download boost source
          aria2c https://github.com/boostorg/boost/releases/download/boost-%boost_version%/boost-%boost_version%.7z -d %src_dir%
          pushd %src_dir%
          7z x boost-%boost_version%.7z
          cd boost-%boost_version%
          set B2_ARCH=arm64
          call .\bootstrap.bat
          .\b2 architecture=arm address-model=64 headers
          popd
          :boost_found

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: |
            bin
            include
            lib
            share
          key: ${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.arch }}-${{ hashFiles('submodule-status') }}

      - name: Build dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: .\build.bat deps

      - name: Install Rime plugins
        run: .\action-install-plugins-windows.bat

      - name: Build and test
        run: .\build.bat test

      - name: Create distributable
        run: |
          7z a rime-${{ env.git_ref_name }}-${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.arch }}.7z `
          dist version-info.txt
          7z a -x'!*/.placeholder' rime-deps-${{ env.git_ref_name }}-${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.arch }}.7z `
          bin include lib share build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifact-${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.arch }}
          path: |
            rime-${{ env.git_ref_name }}-${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.arch }}.7z
            rime-deps-${{ env.git_ref_name }}-${{ runner.os }}-${{ matrix.compiler }}-${{ matrix.arch }}.7z

